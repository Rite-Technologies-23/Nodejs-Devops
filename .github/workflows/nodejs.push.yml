name: Node.js Push Pipeline

on:
  push:
    branches:
      - "**" # Runs on all branches except main

  pull_request:
    branches:
      - "*" 

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  BuildAndUnitTestApp:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout Repository
        uses: actions/checkout@v3

     
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
         node-version: 18

     
      - name: Install Dependencies
        run: npm install  # Installs dependencies

      - name: Build Project
        run: npm run build 

      - name: Fix Jest Permission
        run: chmod +x ./node_modules/.bin/jest

      - name: Run Unit Tests with JSON Output
        run: |
          # Run the tests and generate the JSON output
          ./node_modules/.bin/jest test/test.js --json --outputFile=jest-output.json --runInBand
        continue-on-error: true # Allow the pipeline to continue even if tests fail

      - name: Check Test Failures
        run: |
          # Ensure jest-output.json file exists
          if [ ! -f "jest-output.json" ]; then
            echo "jest-output.json not found. Skipping failure checks."
            exit 0
          fi
          
          # Extract major test failures
          major_failures=$(jq '[.testResults[] | select(.name | test("^major")) | .status] | unique' jest-output.json)
          major_failures_count=$(echo $major_failures | jq length)

          # Extract minor test failures (not stopping build, but logging)
          minor_failures=$(jq '[.testResults[] | select(.name | test("^minor")) | .status] | unique' jest-output.json)
          minor_failures_count=$(echo $minor_failures | jq length)

          # Log the failures
          echo "Major Failures: $major_failures_count"
          echo "Minor Failures: $minor_failures_count"

          # Check if there are major test failures, and fail the build only if major tests fail
          if [ "$major_failures_count" -gt 0 ]; then
            echo "Major test cases failed!"
            exit 1
          else
            echo "No major test cases failed. Proceeding with build..."
          fi

          # If minor tests failed, just log the reason
          if [ "$minor_failures_count" -gt 0 ]; then
            echo "Minor test cases failed. This is non-critical."
          fi

      - name: Run Unit Tests with Coverage
        run: npm test -- --runInBand --coverage

      - name: Upload Coverage Report (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: coverage/lcov-report/
      
      - name: Upload lcov.info
        uses: actions/upload-artifact@v4
        with:
          name: lcov
          path: coverage/lcov.info

      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: jest-junit-report
          path: reports/junit/js-test-results.xml
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
         SONAR_TOKEN: ${{  secrets.SONAR_TOKEN  }}
         